#cloud-config

coreos:
  etcd2:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new?size=3
    discovery: "https://discovery.etcd.io/new"
    # multi-region and multi-cloud deployments need to use $public_ipv4
    advertise-client-urls: "http://$private_ipv4:2379,http://$private_ipv4:4001"
    initial-advertise-peer-urls: "http://$private_ipv4:2380"
    # listen on both the official ports and the legacy ports
    # legacy ports can be omitted if your application doesn't depend on them
    listen-client-urls: "http://0.0.0.0:2379,http://0.0.0.0:4001"
    listen-peer-urls: "http://$private_ipv4:2380,http://$private_ipv4:7001"


  fleet:
    public-ip: $private_ipv4
  # uncomment for azure.
  # metadata: region=us-east

#  flannel:
#    interface: $private_ipv4

  units:
    - name: "etcd2.service"
      command: "start"

    - name: "fleet.service"
      command: "start"

#    - name: "flanneld.service"
#      command: "start"
#      drop-ins:
#      - name: 50-network-config.conf
#        content: |
#          [Service]
#          ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "10.1.0.0/16" }'

    - name: "docker-tcp.socket"
      command: "start"
      content: |
        [Unit]
        Description=Docker Socket for the API
        [Socket]
        ListenStream=2375
        Service=docker.service
        BindIPv6Only=both
        [Install]
        WantedBy=sockets.target

    - name: "install-docker-compose.service"
      command: "start"
      content: |
        [Unit]
        Description=Install Docker Compose
        [Service]
        Type=oneshot
        ExecStart=/bin/bash -ex /tmp/install-docker-compose.sh
        [Install]
        WantedBy=multi-user.target
    - name: "install-docker-volume-netshare.service"
      command: "start"
      content: |
        [Unit]
        Description=Install Docker Volume NetShare
        [Service]
        Type=oneshot
        ExecStart=/bin/bash -ex /tmp/install-docker-volume-netshare.sh
        [Install]
        WantedBy=multi-user.target

    - name: "install-java.service"
      command: "start"
      content: |
        [Unit]
        Description=Install Java Binaries
        [Service]
        Type=oneshot
        ExecStart=/bin/bash -ex /tmp/install-java.sh
        [Install]
        WantedBy=multi-user.target

    - name: "install-pypy.service"
      command: "start"
      content: |
        [Unit]
        Description=Install Java Binaries
        [Service]
        Type=oneshot
        ExecStart=/bin/bash -ex /tmp/install-pypy.sh
        [Install]
        WantedBy=multi-user.target

    - name: "puppet.service"
      command: "start"
      content: |
        [Unit]
        Description=Puppet
        After=docker.service
        Requires=docker.service
        [Service]
        TimeoutStartSec=0
        ExecStart=/usr/bin/docker run --rm --privileged --name puppet --hostname %H -v /tmp:/tmp -v /etc:/etc -v /var:/var -v /usr:/usr -v /lib64:/lib64 puppet/puppet-agent agent --verbose --debug --trace --logdest=console --no-daemonize --server=<%= @puppetmaster %> --environment=production --waitforcert=60 --summarize
        [Install]
        WantedBy=multi-user.target

    # docker-volumes-netshare
    # https://ender74.github.io/Sharing-Volumes-With-Docker-NFS/
    - name: "rpc-statd.service"
      command: "start"
      enable: true

    - name: "nfsd.service"
      command: "start"
      enable: true

    - name: "docker-volume-netshare.service"
      command: "start"
      enable: true
      content: |
        [Unit]
        Description=Enable Docker Volume Netshare Plugin for NFS
        Requires=docker.service
        [Service]
        ExecStart=/opt/bin/docker-volume-netshare nfs
        [Install]
        WantedBy=default.target

ssh_authorized_keys:
  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDlZLcFVYcMbYkJ+pwSsTnfOfwmOLZe26J6PBHa/17ZuzBI563BWJfTybjgphVOJwQKAqN+cBfzHZ66PaQm0vqx2Efee1uGq/vd8cmAIyEqmZUnbkxPRQ3G7YLlAwqZalRo2TEglWhEK+O+7hycV3NhCKYpG/2DZwGbW97bKh01R3R0pt9PiSi570w4W4oeUxPioqR/dIJf+g4EnOCnPMvLAT6exGI9hcKCRH3604Qnh2z5rQ0aG4PYS8uCi5MS8AevuWxNg7OKE6e59XxDvruULq+4jerAls+HZVomZ2AQvbcabpqKFEKvVtE12k5uzAWelmZU49NCIHuUgrX5hm0X peter@hackintosh.local"
  - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKetw3EOkjAc3+QuDbumo1GovGzCZbQ7McDDFPyis779 peter@quartermaster"
  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCq1k6++HIrouWWMw/TevD4SaPcMoOHl5rNqGNZ5FghSJb8F7A7DiDhnU8MW8x5pClrQQyY6KTKUI7p1PZptuiNbhf7c2T0O+Rxf0PB0Pt8qZ5RK65rJOXBhPaYt7VBMM18fOrdojoj4kchdRfEYRny4xy3uj3qNwzUSdxRYWDi/q6IGl5wJjVN6O/cvSz/V6hVTi+Hcm+Luch1ZiWlXefuUbIwvBvgazCBx7fPeh4l1DBFtzAec3MUKY73PTcuHfvv/6Nwy4NtRRZAA45Mk6aGDoo1lMeJZUoyKw7ev6XRt9g30s7uqDNDXaieOJlhDCXdOo5cC9Sc4flLFtjk/UsZqjxNl5UALxIw4ZrZ1A/byKZ5gXQ3b6vTR17eu5dhZTClnGIgZZ3R4DNuaNUozlJwoviC8MHe8NIu6H6VseN70MMQX/xdYqDWM45AYo00N3kslndVvoWVGbVlc+0qSisKkJ1Q1ceMmPmsJBvUlcvI5WYFu0wncj1J2sV5uQIzzlGDb/WjthCXN8I+NS29xMi6hDewYrP9Z8+nrDHPpuMCEeQb6tT8fZbytVNRrravetzdqnFFX7qpIkY7UjfHVeDG53l2yknyJJOGr2QPuDwaQvEHmdlb1O2MHTOMFHnNhDQs3Tj8Nvl0BNZmB2N8RcyFny6x3C2+9VhkXAzvn+kitQ== hyper-v_ci@microsoft.com"

hostname: coreos
#( test -d /home/jenkins/java || (mkdir /home/jenkins/java && curl -s -L https://javadl.oracle.com/webapps/download/AutoDL?BundleId=83376 | tar -C /home/jenkins/java --strip=1 -zx) && ssh-keyscan -H github.com > /home/jenkins/.ssh/known_hosts ) ;

users:
  - name: "core"
#   password_hash: <%= @distro %>
    ssh_authorized_keys:
      - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDlZLcFVYcMbYkJ+pwSsTnfOfwmOLZe26J6PBHa/17ZuzBI563BWJfTybjgphVOJwQKAqN+cBfzHZ66PaQm0vqx2Efee1uGq/vd8cmAIyEqmZUnbkxPRQ3G7YLlAwqZalRo2TEglWhEK+O+7hycV3NhCKYpG/2DZwGbW97bKh01R3R0pt9PiSi570w4W4oeUxPioqR/dIJf+g4EnOCnPMvLAT6exGI9hcKCRH3604Qnh2z5rQ0aG4PYS8uCi5MS8AevuWxNg7OKE6e59XxDvruULq+4jerAls+HZVomZ2AQvbcabpqKFEKvVtE12k5uzAWelmZU49NCIHuUgrX5hm0X peter@hackintosh.local"
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKetw3EOkjAc3+QuDbumo1GovGzCZbQ7McDDFPyis779 peter@quartermaster"
      - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCq1k6++HIrouWWMw/TevD4SaPcMoOHl5rNqGNZ5FghSJb8F7A7DiDhnU8MW8x5pClrQQyY6KTKUI7p1PZptuiNbhf7c2T0O+Rxf0PB0Pt8qZ5RK65rJOXBhPaYt7VBMM18fOrdojoj4kchdRfEYRny4xy3uj3qNwzUSdxRYWDi/q6IGl5wJjVN6O/cvSz/V6hVTi+Hcm+Luch1ZiWlXefuUbIwvBvgazCBx7fPeh4l1DBFtzAec3MUKY73PTcuHfvv/6Nwy4NtRRZAA45Mk6aGDoo1lMeJZUoyKw7ev6XRt9g30s7uqDNDXaieOJlhDCXdOo5cC9Sc4flLFtjk/UsZqjxNl5UALxIw4ZrZ1A/byKZ5gXQ3b6vTR17eu5dhZTClnGIgZZ3R4DNuaNUozlJwoviC8MHe8NIu6H6VseN70MMQX/xdYqDWM45AYo00N3kslndVvoWVGbVlc+0qSisKkJ1Q1ceMmPmsJBvUlcvI5WYFu0wncj1J2sV5uQIzzlGDb/WjthCXN8I+NS29xMi6hDewYrP9Z8+nrDHPpuMCEeQb6tT8fZbytVNRrravetzdqnFFX7qpIkY7UjfHVeDG53l2yknyJJOGr2QPuDwaQvEHmdlb1O2MHTOMFHnNhDQs3Tj8Nvl0BNZmB2N8RcyFny6x3C2+9VhkXAzvn+kitQ== hyper-v_ci@microsoft.com"
  - name: "jenkins"
    ssh_authorized_keys:
      - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCq1k6++HIrouWWMw/TevD4SaPcMoOHl5rNqGNZ5FghSJb8F7A7DiDhnU8MW8x5pClrQQyY6KTKUI7p1PZptuiNbhf7c2T0O+Rxf0PB0Pt8qZ5RK65rJOXBhPaYt7VBMM18fOrdojoj4kchdRfEYRny4xy3uj3qNwzUSdxRYWDi/q6IGl5wJjVN6O/cvSz/V6hVTi+Hcm+Luch1ZiWlXefuUbIwvBvgazCBx7fPeh4l1DBFtzAec3MUKY73PTcuHfvv/6Nwy4NtRRZAA45Mk6aGDoo1lMeJZUoyKw7ev6XRt9g30s7uqDNDXaieOJlhDCXdOo5cC9Sc4flLFtjk/UsZqjxNl5UALxIw4ZrZ1A/byKZ5gXQ3b6vTR17eu5dhZTClnGIgZZ3R4DNuaNUozlJwoviC8MHe8NIu6H6VseN70MMQX/xdYqDWM45AYo00N3kslndVvoWVGbVlc+0qSisKkJ1Q1ceMmPmsJBvUlcvI5WYFu0wncj1J2sV5uQIzzlGDb/WjthCXN8I+NS29xMi6hDewYrP9Z8+nrDHPpuMCEeQb6tT8fZbytVNRrravetzdqnFFX7qpIkY7UjfHVeDG53l2yknyJJOGr2QPuDwaQvEHmdlb1O2MHTOMFHnNhDQs3Tj8Nvl0BNZmB2N8RcyFny6x3C2+9VhkXAzvn+kitQ== hyper-v_ci@microsoft.com"
    groups:
      - docker
  - name: "git"
    ssh_authorized_keys:
      - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCq1k6++HIrouWWMw/TevD4SaPcMoOHl5rNqGNZ5FghSJb8F7A7DiDhnU8MW8x5pClrQQyY6KTKUI7p1PZptuiNbhf7c2T0O+Rxf0PB0Pt8qZ5RK65rJOXBhPaYt7VBMM18fOrdojoj4kchdRfEYRny4xy3uj3qNwzUSdxRYWDi/q6IGl5wJjVN6O/cvSz/V6hVTi+Hcm+Luch1ZiWlXefuUbIwvBvgazCBx7fPeh4l1DBFtzAec3MUKY73PTcuHfvv/6Nwy4NtRRZAA45Mk6aGDoo1lMeJZUoyKw7ev6XRt9g30s7uqDNDXaieOJlhDCXdOo5cC9Sc4flLFtjk/UsZqjxNl5UALxIw4ZrZ1A/byKZ5gXQ3b6vTR17eu5dhZTClnGIgZZ3R4DNuaNUozlJwoviC8MHe8NIu6H6VseN70MMQX/xdYqDWM45AYo00N3kslndVvoWVGbVlc+0qSisKkJ1Q1ceMmPmsJBvUlcvI5WYFu0wncj1J2sV5uQIzzlGDb/WjthCXN8I+NS29xMi6hDewYrP9Z8+nrDHPpuMCEeQb6tT8fZbytVNRrravetzdqnFFX7qpIkY7UjfHVeDG53l2yknyJJOGr2QPuDwaQvEHmdlb1O2MHTOMFHnNhDQs3Tj8Nvl0BNZmB2N8RcyFny6x3C2+9VhkXAzvn+kitQ== hyper-v_ci@microsoft.com"
write_files:
  - path: "/etc/motd"
    permissions: "0644"
    owner: "root"
    content: |
      Provisioned automically over pxe using the following cloud-config url 
      http://<%= @fqdn %>/<%= @distro %>/<%= @autofile %>/<%= @name %>.<%= @autofile %>
  - path: "/tmp/install-docker-compose.sh"
    permissions: "0777"
    owner: "core"
    content: |
      #!/bin/bash
      if [ ! -d /opt/bin ];
      then 
        mkdir -p /opt/bin
      fi
      curl -L `curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r '.assets[].browser_download_url | select(contains("Linux") and contains("x86_64"))'` > /opt/bin/docker-compose
      chmod ugo+x /opt/bin/docker-compose
    # docker-volumes-netshare
    # https://ender74.github.io/Sharing-Volumes-With-Docker-NFS/
  - path: "/etc/conf.d/nfs"
    permissions: '0644'
    content: |
      OPTS_RPC_MOUNTD=""
  - path: "/etc/exports"
    permissions: "0644"
    content: /exports/ *(rw,async,no_subtree_check,no_root_squash,fsid=0)
  - path: "/exports/README"
    content: |
      Provisioned automically over pxe using the following cloud-config url 
      http://<%= @fqdn %>/<%= @distro %>/<%= @autofile %>/<%= @name %>.<%= @autofile %>
  - path: "/tmp/install-docker-volume-netshare.sh"
    permissions: "0777"
    owner: "core"
    content: |
      #!/usr/bin/env bash
      if [ ! -d /opt/bin ];
      then 
        mkdir -p /opt/bin
      fi
      wget -nv -O /opt/bin/docker-volume-netshare https://github.com/ContainX/docker-volume-netshare/releases/download/v0.18/docker-volume-netshare_0.18_linux_amd64-bin
      chmod ugo+x  /opt/bin/docker-volume-netshare
  - path: "/tmp/install-java.sh"
    permissions: "0777"
    owner: "core"
    content: |
      #!/usr/bin/env bash
      if [ ! -d /opt/bin ];
      then 
        mkdir -p /opt/bin
      fi

      if [ ! -d /opt/bin/java ];
      then 
        mkdir -p /opt/bin/java
      fi
      curl -s -L https://javadl.oracle.com/webapps/download/AutoDL?BundleId=83376 | tar -C /opt/bin/java --strip=1 -zx
      chmod -R ugo+x /opt/bin/java
      ssh-keyscan -H github.com > /home/jenkins/.ssh/known_hosts;
  - path: "/tmp/install-pypy.sh"
    permissions: "0777"
    owner: "core"
    content: |
      #!/usr/bin/env bash
      PYPY='pypy2-5.9.0-linux64'
      if [ ! -d /opt/bin ];
      then 
        mkdir -p /opt/bin
      fi
      cd /opt/bin 
      wget -nv https://bitbucket.org/pypy/pypy/downloads/${PYPY}.tar.bz2 ;
      tar -xjf ${PYPY}.tar.bz2 ;
      mv ${PYPY} pypy
      rm -rf ${PYPY}.tar.bz2
      chmod -R ugo+x pypy
      cd /opt/bin/pypy/bin
      ln -s /lib64/libncurses.so.5.9 libtinfo.so.5
      wget -nv -o /opt/bin/pypy/bin/get-pip.py https://bootstrap.pypa.io/get-pip.py
      ./pypy get-pip.py
